apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "minio.fullname" . }}-create-bucket"
  labels:
    {{- include "minio.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ include "minio.fullname" . }}-create-bucket"
      labels:
        {{- include "minio.labels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      containers:
      - name: minio-mc
        image: {{ .Values.minioClient.image | default "minio/mc:latest" }}
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "minio.fullname" . }}
              key: user
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "minio.fullname" . }}
              key: password
        - name: MINIO_HOST
          value: "{{ include "minio.fullname" . }}"
        - name: MINIO_PORT
          value: "{{ .Values.service.apiPort }}"
        - name: MC_ALIAS
          value: "{{ .Values.minioClient.alias | default "myminio" }}"
        - name: HOME
          value: "/tmp"
        command: ["/bin/sh", "-c"]
        args:
        - |
          sleep {{ .Values.minioClient.initialDelay | default 5 }}
          mkdir -p /tmp/.mc
          
          echo "Configuring MinIO client..."
          mc alias set $MC_ALIAS http://${MINIO_HOST}:${MINIO_PORT} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}
          
          {{- range $bucket := .Values.buckets }}
          echo "Processing bucket '{{ $bucket.name }}'..."
          if ! mc ls $MC_ALIAS/{{ $bucket.name }} > /dev/null 2>&1; then
            mc mb $MC_ALIAS/{{ $bucket.name }}
            {{- if $bucket.policy }}
            mc policy set {{ $bucket.policy }} $MC_ALIAS/{{ $bucket.name }}
            {{- end }}
            echo "Bucket '{{ $bucket.name }}' created successfully."
          else
            echo "Bucket '{{ $bucket.name }}' already exists."
          fi
          {{- end }}
          
          echo "Current buckets:"
          mc ls $MC_ALIAS 